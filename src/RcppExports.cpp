// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// pdiff
Rcpp::NumericVector pdiff(Rcpp::NumericVector rt, Rcpp::NumericVector ch, Rcpp::NumericVector alpha, Rcpp::NumericVector theta, Rcpp::NumericVector xi, Rcpp::NumericVector tau, Rcpp::NumericVector eta, Rcpp::NumericVector stheta, Rcpp::NumericVector stau, Rcpp::NumericVector sigma, double eps, int parYes);
RcppExport SEXP seqmodels_pdiff(SEXP rtSEXP, SEXP chSEXP, SEXP alphaSEXP, SEXP thetaSEXP, SEXP xiSEXP, SEXP tauSEXP, SEXP etaSEXP, SEXP sthetaSEXP, SEXP stauSEXP, SEXP sigmaSEXP, SEXP epsSEXP, SEXP parYesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type rt(rtSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ch(chSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type stheta(sthetaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type stau(stauSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type parYes(parYesSEXP);
    __result = Rcpp::wrap(pdiff(rt, ch, alpha, theta, xi, tau, eta, stheta, stau, sigma, eps, parYes));
    return __result;
END_RCPP
}
// rdiff
Rcpp::NumericVector rdiff(int N, Rcpp::NumericVector alpha, Rcpp::NumericVector theta, Rcpp::NumericVector xi, Rcpp::NumericVector tau, Rcpp::NumericVector eta, Rcpp::NumericVector stheta, Rcpp::NumericVector stau, Rcpp::NumericVector sigma, double eps, double mxRT, double em_stop, double err, int parYes);
RcppExport SEXP seqmodels_rdiff(SEXP NSEXP, SEXP alphaSEXP, SEXP thetaSEXP, SEXP xiSEXP, SEXP tauSEXP, SEXP etaSEXP, SEXP sthetaSEXP, SEXP stauSEXP, SEXP sigmaSEXP, SEXP epsSEXP, SEXP mxRTSEXP, SEXP em_stopSEXP, SEXP errSEXP, SEXP parYesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type stheta(sthetaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type stau(stauSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< double >::type mxRT(mxRTSEXP);
    Rcpp::traits::input_parameter< double >::type em_stop(em_stopSEXP);
    Rcpp::traits::input_parameter< double >::type err(errSEXP);
    Rcpp::traits::input_parameter< int >::type parYes(parYesSEXP);
    __result = Rcpp::wrap(rdiff(N, alpha, theta, xi, tau, eta, stheta, stau, sigma, eps, mxRT, em_stop, err, parYes));
    return __result;
END_RCPP
}
// remg
Rcpp::NumericVector remg(int N, Rcpp::NumericVector mu, Rcpp::NumericVector sigma, Rcpp::NumericVector lambda);
RcppExport SEXP seqmodels_remg(SEXP NSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lambda(lambdaSEXP);
    __result = Rcpp::wrap(remg(N, mu, sigma, lambda));
    return __result;
END_RCPP
}
// demg
Rcpp::NumericVector demg(Rcpp::NumericVector x, Rcpp::NumericVector mu, Rcpp::NumericVector sigma, Rcpp::NumericVector lambda, int ln);
RcppExport SEXP seqmodels_demg(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP lambdaSEXP, SEXP lnSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type ln(lnSEXP);
    __result = Rcpp::wrap(demg(x, mu, sigma, lambda, ln));
    return __result;
END_RCPP
}
// pemg
Rcpp::NumericVector pemg(Rcpp::NumericVector x, Rcpp::NumericVector mu, Rcpp::NumericVector sigma, Rcpp::NumericVector lambda);
RcppExport SEXP seqmodels_pemg(SEXP xSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP lambdaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type x(xSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lambda(lambdaSEXP);
    __result = Rcpp::wrap(pemg(x, mu, sigma, lambda));
    return __result;
END_RCPP
}
// qemg
Rcpp::NumericVector qemg(Rcpp::NumericVector p, Rcpp::NumericVector mu, Rcpp::NumericVector sigma, Rcpp::NumericVector lambda, double mnRT, double mxRT, int em_stop, double err);
RcppExport SEXP seqmodels_qemg(SEXP pSEXP, SEXP muSEXP, SEXP sigmaSEXP, SEXP lambdaSEXP, SEXP mnRTSEXP, SEXP mxRTSEXP, SEXP em_stopSEXP, SEXP errSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type mnRT(mnRTSEXP);
    Rcpp::traits::input_parameter< double >::type mxRT(mxRTSEXP);
    Rcpp::traits::input_parameter< int >::type em_stop(em_stopSEXP);
    Rcpp::traits::input_parameter< double >::type err(errSEXP);
    __result = Rcpp::wrap(qemg(p, mu, sigma, lambda, mnRT, mxRT, em_stop, err));
    return __result;
END_RCPP
}
// rfrechet
Rcpp::NumericVector rfrechet(int N, Rcpp::NumericVector alpha, Rcpp::NumericVector mu);
RcppExport SEXP seqmodels_rfrechet(SEXP NSEXP, SEXP alphaSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type mu(muSEXP);
    __result = Rcpp::wrap(rfrechet(N, alpha, mu));
    return __result;
END_RCPP
}
// dfrechet
Rcpp::NumericVector dfrechet(Rcpp::NumericVector t, Rcpp::NumericVector alpha, Rcpp::NumericVector mu, int ln);
RcppExport SEXP seqmodels_dfrechet(SEXP tSEXP, SEXP alphaSEXP, SEXP muSEXP, SEXP lnSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type mu(muSEXP);
    Rcpp::traits::input_parameter< int >::type ln(lnSEXP);
    __result = Rcpp::wrap(dfrechet(t, alpha, mu, ln));
    return __result;
END_RCPP
}
// pfrechet
Rcpp::NumericVector pfrechet(Rcpp::NumericVector t, Rcpp::NumericVector alpha, Rcpp::NumericVector mu);
RcppExport SEXP seqmodels_pfrechet(SEXP tSEXP, SEXP alphaSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type mu(muSEXP);
    __result = Rcpp::wrap(pfrechet(t, alpha, mu));
    return __result;
END_RCPP
}
// qfrechet
Rcpp::NumericVector qfrechet(Rcpp::NumericVector p, Rcpp::NumericVector alpha, Rcpp::NumericVector mu);
RcppExport SEXP seqmodels_qfrechet(SEXP pSEXP, SEXP alphaSEXP, SEXP muSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type mu(muSEXP);
    __result = Rcpp::wrap(qfrechet(p, alpha, mu));
    return __result;
END_RCPP
}
// rlba_1acc
Rcpp::NumericVector rlba_1acc(int N, Rcpp::NumericVector A, Rcpp::NumericVector b, Rcpp::NumericVector alpha, Rcpp::NumericVector beta, int ver);
RcppExport SEXP seqmodels_rlba_1acc(SEXP NSEXP, SEXP ASEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP verSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type ver(verSEXP);
    __result = Rcpp::wrap(rlba_1acc(N, A, b, alpha, beta, ver));
    return __result;
END_RCPP
}
// plba_1acc
Rcpp::NumericVector plba_1acc(Rcpp::NumericVector t, Rcpp::NumericVector A, Rcpp::NumericVector b, Rcpp::NumericVector alpha, Rcpp::NumericVector beta, int ver);
RcppExport SEXP seqmodels_plba_1acc(SEXP tSEXP, SEXP ASEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP verSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type ver(verSEXP);
    __result = Rcpp::wrap(plba_1acc(t, A, b, alpha, beta, ver));
    return __result;
END_RCPP
}
// dlba_1acc
Rcpp::NumericVector dlba_1acc(Rcpp::NumericVector t, Rcpp::NumericVector A, Rcpp::NumericVector b, Rcpp::NumericVector alpha, Rcpp::NumericVector beta, int ver, int ln);
RcppExport SEXP seqmodels_dlba_1acc(SEXP tSEXP, SEXP ASEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP verSEXP, SEXP lnSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type ver(verSEXP);
    Rcpp::traits::input_parameter< int >::type ln(lnSEXP);
    __result = Rcpp::wrap(dlba_1acc(t, A, b, alpha, beta, ver, ln));
    return __result;
END_RCPP
}
// qlba_1acc
Rcpp::NumericVector qlba_1acc(Rcpp::NumericVector p, Rcpp::NumericVector A, Rcpp::NumericVector b, Rcpp::NumericVector alpha, Rcpp::NumericVector beta, int ver, double mxT, int em_stop, double err);
RcppExport SEXP seqmodels_qlba_1acc(SEXP pSEXP, SEXP ASEXP, SEXP bSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP verSEXP, SEXP mxTSEXP, SEXP em_stopSEXP, SEXP errSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type A(ASEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b(bSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type ver(verSEXP);
    Rcpp::traits::input_parameter< double >::type mxT(mxTSEXP);
    Rcpp::traits::input_parameter< int >::type em_stop(em_stopSEXP);
    Rcpp::traits::input_parameter< double >::type err(errSEXP);
    __result = Rcpp::wrap(qlba_1acc(p, A, b, alpha, beta, ver, mxT, em_stop, err));
    return __result;
END_RCPP
}
// rlba
Rcpp::NumericMatrix rlba(int N, Rcpp::NumericVector A1, Rcpp::NumericVector b1, Rcpp::NumericVector alpha1, Rcpp::NumericVector beta1, Rcpp::NumericVector tau1, Rcpp::NumericVector A0, Rcpp::NumericVector b0, Rcpp::NumericVector alpha0, Rcpp::NumericVector beta0, Rcpp::NumericVector tau0, int rl, int ver);
RcppExport SEXP seqmodels_rlba(SEXP NSEXP, SEXP A1SEXP, SEXP b1SEXP, SEXP alpha1SEXP, SEXP beta1SEXP, SEXP tau1SEXP, SEXP A0SEXP, SEXP b0SEXP, SEXP alpha0SEXP, SEXP beta0SEXP, SEXP tau0SEXP, SEXP rlSEXP, SEXP verSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type A1(A1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha1(alpha1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau1(tau1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type A0(A0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b0(b0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha0(alpha0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta0(beta0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau0(tau0SEXP);
    Rcpp::traits::input_parameter< int >::type rl(rlSEXP);
    Rcpp::traits::input_parameter< int >::type ver(verSEXP);
    __result = Rcpp::wrap(rlba(N, A1, b1, alpha1, beta1, tau1, A0, b0, alpha0, beta0, tau0, rl, ver));
    return __result;
END_RCPP
}
// dlba
Rcpp::NumericVector dlba(Rcpp::NumericVector rt, Rcpp::NumericVector ch, Rcpp::NumericVector A1, Rcpp::NumericVector b1, Rcpp::NumericVector alpha1, Rcpp::NumericVector beta1, Rcpp::NumericVector tau1, Rcpp::NumericVector A0, Rcpp::NumericVector b0, Rcpp::NumericVector alpha0, Rcpp::NumericVector beta0, Rcpp::NumericVector tau0, double rl, int ln, int ver);
RcppExport SEXP seqmodels_dlba(SEXP rtSEXP, SEXP chSEXP, SEXP A1SEXP, SEXP b1SEXP, SEXP alpha1SEXP, SEXP beta1SEXP, SEXP tau1SEXP, SEXP A0SEXP, SEXP b0SEXP, SEXP alpha0SEXP, SEXP beta0SEXP, SEXP tau0SEXP, SEXP rlSEXP, SEXP lnSEXP, SEXP verSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type rt(rtSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ch(chSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type A1(A1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha1(alpha1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau1(tau1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type A0(A0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b0(b0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha0(alpha0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta0(beta0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau0(tau0SEXP);
    Rcpp::traits::input_parameter< double >::type rl(rlSEXP);
    Rcpp::traits::input_parameter< int >::type ln(lnSEXP);
    Rcpp::traits::input_parameter< int >::type ver(verSEXP);
    __result = Rcpp::wrap(dlba(rt, ch, A1, b1, alpha1, beta1, tau1, A0, b0, alpha0, beta0, tau0, rl, ln, ver));
    return __result;
END_RCPP
}
// plba
Rcpp::NumericVector plba(Rcpp::NumericVector rt, Rcpp::NumericVector ch, Rcpp::NumericVector A1, Rcpp::NumericVector b1, Rcpp::NumericVector alpha1, Rcpp::NumericVector beta1, Rcpp::NumericVector tau1, Rcpp::NumericVector A0, Rcpp::NumericVector b0, Rcpp::NumericVector alpha0, Rcpp::NumericVector beta0, Rcpp::NumericVector tau0, double rl, double ver, int parYes);
RcppExport SEXP seqmodels_plba(SEXP rtSEXP, SEXP chSEXP, SEXP A1SEXP, SEXP b1SEXP, SEXP alpha1SEXP, SEXP beta1SEXP, SEXP tau1SEXP, SEXP A0SEXP, SEXP b0SEXP, SEXP alpha0SEXP, SEXP beta0SEXP, SEXP tau0SEXP, SEXP rlSEXP, SEXP verSEXP, SEXP parYesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type rt(rtSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ch(chSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type A1(A1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b1(b1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha1(alpha1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta1(beta1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau1(tau1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type A0(A0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type b0(b0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha0(alpha0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type beta0(beta0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau0(tau0SEXP);
    Rcpp::traits::input_parameter< double >::type rl(rlSEXP);
    Rcpp::traits::input_parameter< double >::type ver(verSEXP);
    Rcpp::traits::input_parameter< int >::type parYes(parYesSEXP);
    __result = Rcpp::wrap(plba(rt, ch, A1, b1, alpha1, beta1, tau1, A0, b0, alpha0, beta0, tau0, rl, ver, parYes));
    return __result;
END_RCPP
}
// ddiff
Rcpp::NumericVector ddiff(Rcpp::NumericVector rt, Rcpp::NumericVector ch, Rcpp::NumericVector alpha, Rcpp::NumericVector theta, Rcpp::NumericVector xi, Rcpp::NumericVector tau, Rcpp::NumericVector eta, Rcpp::NumericVector stheta, Rcpp::NumericVector stau, Rcpp::NumericVector sigma, double eps, int ln, int parYes);
RcppExport SEXP seqmodels_ddiff(SEXP rtSEXP, SEXP chSEXP, SEXP alphaSEXP, SEXP thetaSEXP, SEXP xiSEXP, SEXP tauSEXP, SEXP etaSEXP, SEXP sthetaSEXP, SEXP stauSEXP, SEXP sigmaSEXP, SEXP epsSEXP, SEXP lnSEXP, SEXP parYesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type rt(rtSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ch(chSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type theta(thetaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type eta(etaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type stheta(sthetaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type stau(stauSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type eps(epsSEXP);
    Rcpp::traits::input_parameter< int >::type ln(lnSEXP);
    Rcpp::traits::input_parameter< int >::type parYes(parYesSEXP);
    __result = Rcpp::wrap(ddiff(rt, ch, alpha, theta, xi, tau, eta, stheta, stau, sigma, eps, ln, parYes));
    return __result;
END_RCPP
}
// rinvgauss
Rcpp::NumericVector rinvgauss(int N, Rcpp::NumericVector kappa, Rcpp::NumericVector xi, Rcpp::NumericVector sigma);
RcppExport SEXP seqmodels_rinvgauss(SEXP NSEXP, SEXP kappaSEXP, SEXP xiSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sigma(sigmaSEXP);
    __result = Rcpp::wrap(rinvgauss(N, kappa, xi, sigma));
    return __result;
END_RCPP
}
// dinvgauss
Rcpp::NumericVector dinvgauss(Rcpp::NumericVector t, Rcpp::NumericVector kappa, Rcpp::NumericVector xi, Rcpp::NumericVector sigma, int ln);
RcppExport SEXP seqmodels_dinvgauss(SEXP tSEXP, SEXP kappaSEXP, SEXP xiSEXP, SEXP sigmaSEXP, SEXP lnSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< int >::type ln(lnSEXP);
    __result = Rcpp::wrap(dinvgauss(t, kappa, xi, sigma, ln));
    return __result;
END_RCPP
}
// pinvgauss
Rcpp::NumericVector pinvgauss(Rcpp::NumericVector t, Rcpp::NumericVector kappa, Rcpp::NumericVector xi, Rcpp::NumericVector sigma);
RcppExport SEXP seqmodels_pinvgauss(SEXP tSEXP, SEXP kappaSEXP, SEXP xiSEXP, SEXP sigmaSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type t(tSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sigma(sigmaSEXP);
    __result = Rcpp::wrap(pinvgauss(t, kappa, xi, sigma));
    return __result;
END_RCPP
}
// qinvgauss
Rcpp::NumericVector qinvgauss(Rcpp::NumericVector p, Rcpp::NumericVector kappa, Rcpp::NumericVector xi, Rcpp::NumericVector sigma, double mxT, int em_stop, double err);
RcppExport SEXP seqmodels_qinvgauss(SEXP pSEXP, SEXP kappaSEXP, SEXP xiSEXP, SEXP sigmaSEXP, SEXP mxTSEXP, SEXP em_stopSEXP, SEXP errSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type kappa(kappaSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type sigma(sigmaSEXP);
    Rcpp::traits::input_parameter< double >::type mxT(mxTSEXP);
    Rcpp::traits::input_parameter< int >::type em_stop(em_stopSEXP);
    Rcpp::traits::input_parameter< double >::type err(errSEXP);
    __result = Rcpp::wrap(qinvgauss(p, kappa, xi, sigma, mxT, em_stop, err));
    return __result;
END_RCPP
}
// rwaldrace
Rcpp::NumericMatrix rwaldrace(int N, Rcpp::NumericVector k1, Rcpp::NumericVector xi1, Rcpp::NumericVector tau1, Rcpp::NumericVector k0, Rcpp::NumericVector xi0, Rcpp::NumericVector tau0, Rcpp::NumericVector s1, Rcpp::NumericVector s0, int rl);
RcppExport SEXP seqmodels_rwaldrace(SEXP NSEXP, SEXP k1SEXP, SEXP xi1SEXP, SEXP tau1SEXP, SEXP k0SEXP, SEXP xi0SEXP, SEXP tau0SEXP, SEXP s1SEXP, SEXP s0SEXP, SEXP rlSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< int >::type N(NSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi1(xi1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau1(tau1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type k0(k0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi0(xi0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau0(tau0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type s0(s0SEXP);
    Rcpp::traits::input_parameter< int >::type rl(rlSEXP);
    __result = Rcpp::wrap(rwaldrace(N, k1, xi1, tau1, k0, xi0, tau0, s1, s0, rl));
    return __result;
END_RCPP
}
// dwaldrace
Rcpp::NumericVector dwaldrace(Rcpp::NumericVector rt, Rcpp::NumericVector ch, Rcpp::NumericVector k1, Rcpp::NumericVector xi1, Rcpp::NumericVector tau1, Rcpp::NumericVector k0, Rcpp::NumericVector xi0, Rcpp::NumericVector tau0, Rcpp::NumericVector s1, Rcpp::NumericVector s0, double rl, int ln);
RcppExport SEXP seqmodels_dwaldrace(SEXP rtSEXP, SEXP chSEXP, SEXP k1SEXP, SEXP xi1SEXP, SEXP tau1SEXP, SEXP k0SEXP, SEXP xi0SEXP, SEXP tau0SEXP, SEXP s1SEXP, SEXP s0SEXP, SEXP rlSEXP, SEXP lnSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type rt(rtSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ch(chSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi1(xi1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau1(tau1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type k0(k0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi0(xi0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau0(tau0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type s0(s0SEXP);
    Rcpp::traits::input_parameter< double >::type rl(rlSEXP);
    Rcpp::traits::input_parameter< int >::type ln(lnSEXP);
    __result = Rcpp::wrap(dwaldrace(rt, ch, k1, xi1, tau1, k0, xi0, tau0, s1, s0, rl, ln));
    return __result;
END_RCPP
}
// pwaldrace
Rcpp::NumericVector pwaldrace(Rcpp::NumericVector rt, Rcpp::NumericVector ch, Rcpp::NumericVector k1, Rcpp::NumericVector xi1, Rcpp::NumericVector tau1, Rcpp::NumericVector k0, Rcpp::NumericVector xi0, Rcpp::NumericVector tau0, Rcpp::NumericVector s1, Rcpp::NumericVector s0, double rl, int parYes);
RcppExport SEXP seqmodels_pwaldrace(SEXP rtSEXP, SEXP chSEXP, SEXP k1SEXP, SEXP xi1SEXP, SEXP tau1SEXP, SEXP k0SEXP, SEXP xi0SEXP, SEXP tau0SEXP, SEXP s1SEXP, SEXP s0SEXP, SEXP rlSEXP, SEXP parYesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type rt(rtSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ch(chSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi1(xi1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau1(tau1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type k0(k0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi0(xi0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau0(tau0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type s0(s0SEXP);
    Rcpp::traits::input_parameter< double >::type rl(rlSEXP);
    Rcpp::traits::input_parameter< int >::type parYes(parYesSEXP);
    __result = Rcpp::wrap(pwaldrace(rt, ch, k1, xi1, tau1, k0, xi0, tau0, s1, s0, rl, parYes));
    return __result;
END_RCPP
}
// qwaldrace
Rcpp::NumericVector qwaldrace(Rcpp::NumericVector p, Rcpp::NumericVector ch, Rcpp::NumericVector k1, Rcpp::NumericVector xi1, Rcpp::NumericVector tau1, Rcpp::NumericVector k0, Rcpp::NumericVector xi0, Rcpp::NumericVector tau0, Rcpp::NumericVector s1, Rcpp::NumericVector s0, double rl, double mxRT, double em_stop, double err, double joint, int parYes);
RcppExport SEXP seqmodels_qwaldrace(SEXP pSEXP, SEXP chSEXP, SEXP k1SEXP, SEXP xi1SEXP, SEXP tau1SEXP, SEXP k0SEXP, SEXP xi0SEXP, SEXP tau0SEXP, SEXP s1SEXP, SEXP s0SEXP, SEXP rlSEXP, SEXP mxRTSEXP, SEXP em_stopSEXP, SEXP errSEXP, SEXP jointSEXP, SEXP parYesSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type p(pSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type ch(chSEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type k1(k1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi1(xi1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau1(tau1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type k0(k0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type xi0(xi0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type tau0(tau0SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type s1(s1SEXP);
    Rcpp::traits::input_parameter< Rcpp::NumericVector >::type s0(s0SEXP);
    Rcpp::traits::input_parameter< double >::type rl(rlSEXP);
    Rcpp::traits::input_parameter< double >::type mxRT(mxRTSEXP);
    Rcpp::traits::input_parameter< double >::type em_stop(em_stopSEXP);
    Rcpp::traits::input_parameter< double >::type err(errSEXP);
    Rcpp::traits::input_parameter< double >::type joint(jointSEXP);
    Rcpp::traits::input_parameter< int >::type parYes(parYesSEXP);
    __result = Rcpp::wrap(qwaldrace(p, ch, k1, xi1, tau1, k0, xi0, tau0, s1, s0, rl, mxRT, em_stop, err, joint, parYes));
    return __result;
END_RCPP
}
