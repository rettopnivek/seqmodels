% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{rwaldrace}
\alias{dwaldrace}
\alias{pwaldrace}
\alias{qwaldrace}
\alias{rwaldrace}
\title{The Wald Race Model}
\usage{
rwaldrace(n, k1, x1, t1, k0, x0, t0, s1 = as.numeric(c(1)),
  s0 = as.numeric(c(1)), rl = FALSE, parYes = FALSE)

dwaldrace(rt, ch, k1, x1, t1, k0, x0, t0, s1 = as.numeric(c(1)),
  s0 = as.numeric(c(1)), rl = FALSE, ln = FALSE, parYes = TRUE)

pwaldrace(rt, ch, k1, x1, t1, k0, x0, t0, s1 = as.numeric(c(1)),
  s0 = as.numeric(c(1)), rl = FALSE, ln = FALSE, lower_tail = TRUE,
  parYes = TRUE)

qwaldrace(p, ch, k1, x1, t1, k0, x0, t0, s1 = as.numeric(c(1)),
  s0 = as.numeric(c(1)), rl = FALSE, bounds = 3, em_stop = 20,
  err = 1e-08, parYes = TRUE)
}
\arguments{
\item{n}{the number of draws for random generation.}

\item{k1}{the threshold determining when a decision terminates for
choices coded as 1 ( \code{k1} > 0).}

\item{x1}{the average rate of evidence accumulation within a trial
for choices coded as 1 (\code{x1} \eqn{\ge} 0).}

\item{t1}{the residual latency for choices coded as 1
(\code{t1} \eqn{\ge} 0).}

\item{k0}{the threshold determining when a decision terminates for
choices coded as 0 ( \code{k1} > 0).}

\item{x0}{the average rate of evidence accumulation within a trial
for choices coded as 0 (\code{x1} \eqn{\ge} 0).}

\item{t0}{the residual latency for choices coded as 0
(\code{t0} \eqn{\ge} 0).}

\item{s1}{the within trial variability for choices coded as 1
(\code{s1} > 0).}

\item{s0}{the within trial variability for choices coded as 0
(\code{s0} > 0).}

\item{rl}{logical; if \code{TRUE}, the residual latency shifts
the finishing times for each racer before they are compared.
Otherwise, the residual latency shifts the winning finishing
times.}

\item{parYes}{logical; if \code{TRUE} the code is run in parallel.}

\item{rt}{a vector of responses times ( rt > 0 ).}

\item{ch}{a vector of accuracy/choice values ( ch = {0,1} ).}

\item{ln}{logical; if \code{TRUE}, probabilities are given as
log(p).}

\item{lower_tail}{logical; if \code{TRUE} (default), probabilities
are \eqn{P(X \le x)} otherwise \eqn{P( X > x)}.}

\item{p}{a vector of probabilities.}

\item{bounds}{upper limit of the quantiles to explore
for the approximation via linear interpolation.}

\item{em_stop}{the maximum number of iterations to attempt to
find the quantile via linear interpolation.}

\item{err}{the number of decimals places to approximate the
cumulative probability during estimation of the quantile function.}
}
\value{
\code{dwaldrace} gives the density, \code{pwaldrace} approximates the
distribution function, \code{qwaldrace} approximates the quantile
function, and \code{rwaldrace} generates random deviates.

The length of the result is determined by \code{n} for
\code{rwaldrace}, and is the maximum of the length of the numerical
arguments for the other functions.

The numerical arguments other than \code{n} are recycled to the
length of the result.
}
\section{Details}{

The Wald (or diffusion) race model assumes that two independent one
boundary diffusion processes race each other. Whichever racer reaches
its threshold first determines the choice and response time. Because
of the independence, the likelihood for the Wald race model is:
\deqn{ f(t,y|\alpha)*(1-F(t,y|\beta),}
where \eqn{\alpha} and \eqn{\beta} are the sets of parameters for
the Wald distribution describing the finishing times for the
winning and losing racer respectively, and \eqn{f} and \eqn{F} refer
to the density and distribution functions respectively.

The distribution function is estimated using numerical integration
via Gaussian quadrature.

A linear interpolation approach is used to approximate the
quantile function, estimating the inverse of the cumulative
distribution function via an iterative procedure. When
the precision of this estimate is set to 8 decimal places,
the approximation will be typically accurate to about half of a
millisecond.
}

\section{References}{


Logan, G. D., Van Zandt, T., Verbruggen, F., & Wagenmakers, E. J.
  (2014). On the ability to inhibit thought and action: General
  and special theories of an act of control. Psychological Review,
  121, 66.
}
\examples{
# Density function
dwaldrace( .5, c(1,0), k1 = 1.2, x1 = 2.0, t1 = .2,
  k0 = 1.0, x0 = 0.8, t0 = .2 )
# Distribution function
pwaldrace( .5, c(1,0), k1 = 1.2, x1 = 2.0, t1 = .2,
  k0 = 1.0, x0 = 0.8, t0 = .2 )
# Choice probabilities
pwaldrace( Inf, c(1,0), k1 = 1.2, x1 = 2.0, t1 = .2,
  k0 = 1.0, x0 = 0.8, t0 = .2 )
# Quantile function (Accurate to ~4 decimal places)
qwaldrace( .5, c(1,0), k1 = 1.2, x1 = 2.0, t1 = .2,
  k0 = 1.0, x0 = 0.8, t0 = .2 )

# Simulate values
sim = rwiener( n = 100, alpha = 0.8, theta = 0.6,
  xi = 0.0, tau = 0.3 )

# Plotting
layout( matrix( 1:4, 2, 2, byrow = T ) )
# Parameters
prm = c( k1 = 1.2, x1 = 2.0, t1 = .2, k0 = 1.0,
  x0 = 0.5, t0 = .2 )
# Density
obj = quickdist( 'wr', 'PDF', prm )
plot( obj ); lines( obj ); lines( obj, ch = 0, lty = 2 )
# CDF
obj = quickdist( 'wr', 'CDF', prm )
plot( obj ); lines( obj ); lines( obj, ch = 0, lty = 2 )
# Quantiles
obj = quickdist( 'wr', 'QF', prm, x = seq( .2, .8, .2 ) )
plot( obj ); prb = seq( .2, .8, .2 )
abline( h = prb, lty = 2 )
# Conditional, not joint
lines( obj, type = 'b', pch = 19, weight = 1 )
lines( obj, ch = 0, type = 'b', pch = 17, lty = 2, weight = 1 )
# Hazard function
obj = quickdist( 'wr', 'HF', prm )
plot( obj ); lines( obj ); lines( obj, ch = 0, lty = 2 )

}

