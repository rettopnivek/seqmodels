% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R
\name{rwaldrace}
\alias{dwaldrace}
\alias{pwaldrace}
\alias{qwaldrace}
\alias{rwaldrace}
\title{The Wald Race Model}
\usage{
rwaldrace(N, k1, xi1, tau1, k0, xi0, tau0, s1 = as.numeric(c(1)),
  s0 = as.numeric(c(1)), rl = 0L)

dwaldrace(rt, ch, k1, xi1, tau1, k0, xi0, tau0, s1 = as.numeric(c(1)),
  s0 = as.numeric(c(1)), rl = 0L, ln = 0L)

pwaldrace(rt, ch, k1, xi1, tau1, k0, xi0, tau0, s1 = as.numeric(c(1)),
  s0 = as.numeric(c(1)), rl = 0, parYes = 1L)

qwaldrace(p, ch, k1, xi1, tau1, k0, xi0, tau0, s1 = as.numeric(c(1)),
  s0 = as.numeric(c(1)), rl = 0, mxRT = 4, em_stop = 20, err = 0.001,
  joint = 1, parYes = 1L)
}
\arguments{
\item{N}{the number of observations to simulate.}

\item{k1}{the threshold determining when a decision terminates for
choices == 1 ( k1 > 0).}

\item{xi1}{the average rate of evidence accumulation within a trial
for choices == 1 (xi1 > 0).}

\item{tau1}{the residual latency for choices == 1 (tau1 >= 0).}

\item{k0}{the threshold determining when a decision terminates for
choices == 0 ( k0 > 0).}

\item{xi0}{the average rate of evidence accumulation within a trial
for choices == 0 (xi0 > 0).}

\item{tau0}{the residual latency for choices == 0 (tau0 >= 0).}

\item{s1}{the within trial variability for choices == 1 (s1 > 0).}

\item{s0}{the within trial variability for choices == 0 (s0 > 0).}

\item{rl}{if 1, the residual latency impacts the decision rule.}

\item{rt}{a vector of response times (rt > 0).}

\item{ch}{a vector of choices (ch = {0,1}).}

\item{ln}{indicates whether the log-likelihood should be returned,
where 1 = True, 0 = False (the default).}

\item{parYes}{if set to 1, the code is run in parallel.}

\item{mxRT}{the maximum RT response time value that the algorithm is applied to.}

\item{err}{the desired degree of precision for the linear interpolation.}

\item{joint}{If 1, indicates that the probabilities are based on the joint
distribution function.}

\item{em_step}{the maximum number of iterations for the linear interpolation.}
}
\description{
Random generation, density, distribution, and quantile functions for
a two accumulator version of the Wald (or diffusion) race model
(Logan et al., 2014).
}
\section{Details}{

The Wald (or diffusion) race model assumes that two independent one
boundary diffusion processes race each other. Whichever racer reaches
its threshold first determines the choice and response time. Because
of the independence, the likelihood for the Wald race model is:
\deqn{ f(t,y|\alpha)*(1-F(t,y|\beta)},
where \eqn{\alpha} and \eqn{\beta} are the sets of parameters for
the Wald distribution describing the finishing times for the
winning and losing racer respectively, and \eqn{f} and \eqn{F} refer
to the density and distribution functions respectively.
}

\section{Notes}{

For unequal vector lengths, values are recycled. For random draws,
inadmissible values return NA.
}

\section{References}{

Logan, G. D., Van Zandt, T., Verbruggen, F., & Wagenmakers, E. J.
  (2014). On the ability to inhibit thought and action: General
  and special theories of an act of control. Psychological Review,
  121, 66.
}
\examples{
# Treatment of illegal values and vectorization
set.seed(200)
rwaldrace( 8, c(1,2,-1,1), c(4,1,1,1), c(.2,-.1), 1, 1, .2 ) # Returns NA
dwaldrace( .5, 1, c(1,-2,1), 4, .2, c(1,1,-2), 1, .2 )

# Density function
rt = seq(0,1,length=1000)
plot( rt, dwaldrace( rt, 1, .1, .4, .2, .1, .2, .2, s1 = .1, s0 = .1 ),
  type = 'l', bty ='l', xlab = 'Time', ylab = 'Density' )
lines( rt, dwaldrace( rt, 0, 1, 4, .2, 1, 2, .2 ), lty = 2 )

# Distribution function
rt = seq(0,2,length=1000)
pwaldrace( Inf, 1, 1.8, 3, .2, 1.4, 1, .2 ) # Choice probabilities
plot( rt, pwaldrace( rt, 1, 1.8, 3, .2, 1.4, 1, .2 ), type = 'l',
  xlab = 'Time', ylab = 'Distribution', bty = 'l', yaxt = 'n' )
axis(2,seq(.2,.8,.2))
# Quantile function
prb = seq( .1, .7, .2 ) # Probabilities
qnt = qwaldrace( prb, 1, 1.8, 3, .2, 1.4, 1, .2 )
segments( rep(0,length(prb)), prb, qnt, prb )
segments( qnt,rep(0,length(prb)), qnt, prb )

}

